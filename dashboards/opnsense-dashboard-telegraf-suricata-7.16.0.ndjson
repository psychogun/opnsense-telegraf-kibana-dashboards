{"attributes":{"fieldAttrs":"{\"suricata.alert_action\":{\"count\":1},\"suricata.alert_category\":{\"count\":1},\"suricata.alert_signature\":{\"count\":1},\"suricata.in_iface\":{\"count\":1},\"tag.dest_ip\":{\"count\":3},\"tag.dest_port\":{\"count\":3},\"tag.src_ip\":{\"count\":3},\"tag.src_port\":{\"count\":3},\"suricata.flow_id\":{\"count\":2},\"suricata.alert_metadata_signature_severity_0\":{\"count\":1},\"suricata.alert_severity\":{\"count\":2}}","fields":"[]","runtimeFieldMap":"{}","timeFieldName":"@timestamp","title":"telegraf-*","typeMeta":"{}"},"coreMigrationVersion":"7.16.2","id":"4d596070-3051-11ec-bd68-7dd8bf7e92b5","migrationVersion":{"index-pattern":"7.11.0"},"references":[],"type":"index-pattern","updated_at":"2021-10-19T12:48:21.039Z","version":"WzM5NTUsMl0="}
{"attributes":{"description":"","state":{"datasourceStates":{"indexpattern":{"layers":{"a2aa0795-eecf-4864-9f44-fef5b0d3a8c7":{"columnOrder":["3cc42429-ce58-425f-a9fc-990d8a7e4d7f","498d8de6-8c4f-4e09-80ee-03c775d4bccb","5f6c287b-729b-48ac-a5f9-fd65e03d889a"],"columns":{"3cc42429-ce58-425f-a9fc-990d8a7e4d7f":{"customLabel":true,"dataType":"string","isBucketed":true,"label":" ","operationType":"terms","params":{"missingBucket":false,"orderBy":{"columnId":"5f6c287b-729b-48ac-a5f9-fd65e03d889a","type":"column"},"orderDirection":"desc","otherBucket":true,"size":15},"scale":"ordinal","sourceField":"suricata.alert_category.keyword"},"498d8de6-8c4f-4e09-80ee-03c775d4bccb":{"customLabel":true,"dataType":"date","isBucketed":true,"label":" ","operationType":"date_histogram","params":{"interval":"auto"},"scale":"interval","sourceField":"@timestamp"},"5f6c287b-729b-48ac-a5f9-fd65e03d889a":{"customLabel":true,"dataType":"number","isBucketed":false,"label":" ","operationType":"unique_count","scale":"ratio","sourceField":"suricata.alert_category.keyword"}},"incompleteColumns":{}}}}},"filters":[],"query":{"language":"kuery","query":""},"visualization":{"layers":[{"accessors":["5f6c287b-729b-48ac-a5f9-fd65e03d889a"],"layerId":"a2aa0795-eecf-4864-9f44-fef5b0d3a8c7","layerType":"data","position":"top","seriesType":"bar_stacked","showGridlines":false,"splitAccessor":"3cc42429-ce58-425f-a9fc-990d8a7e4d7f","xAccessor":"498d8de6-8c4f-4e09-80ee-03c775d4bccb"}],"legend":{"isVisible":true,"position":"right"},"preferredSeriesType":"bar_stacked","title":"Empty XY chart","valueLabels":"hide","yLeftExtent":{"mode":"full"},"yRightExtent":{"mode":"full"}}},"title":"OPNsense : Telegraf - Suricata metrics - Signature Categories / Time","visualizationType":"lnsXY"},"coreMigrationVersion":"7.16.2","id":"a114c980-310e-11ec-bd68-7dd8bf7e92b5","migrationVersion":{"lens":"7.16.0"},"references":[{"id":"4d596070-3051-11ec-bd68-7dd8bf7e92b5","name":"indexpattern-datasource-current-indexpattern","type":"index-pattern"},{"id":"4d596070-3051-11ec-bd68-7dd8bf7e92b5","name":"indexpattern-datasource-layer-a2aa0795-eecf-4864-9f44-fef5b0d3a8c7","type":"index-pattern"}],"type":"lens","updated_at":"2021-10-19T19:01:18.426Z","version":"WzQwMDgsMl0="}
{"attributes":{"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[]}"},"title":"OPNsense : Telegraf - Suricata metrics - Vega Flow","uiStateJSON":"{}","version":1,"visState":"{\"title\":\"OPNsense : Telegraf - Suricata metrics - Vega Flow\",\"type\":\"vega\",\"aggs\":[],\"params\":{\"spec\":\"{\\n  $schema: https://vega.github.io/schema/vega/v3.0.json\\n  data: [\\n    {\\n      // query ES based on the currently selected time range and filter string\\n      name: rawData\\n      url: {\\n        %context%: true\\n        %timefield%: @timestamp\\n        index: telegraf-*\\n        body: {\\n          size: 0\\n          aggs: {\\n            table: {\\n              composite: {\\n                size: 10000\\n                sources: [\\n                  {\\n                    stk1: {\\n                      terms: {field: \\\"tag.src_ip.keyword\\\"}\\n                    }\\n                  }\\n                  {\\n                    stk2: {\\n                      terms: {field: \\\"tag.dest_ip.keyword\\\"}\\n                    }\\n                  }\\n                ]\\n              }\\n            }\\n          }\\n        }\\n      }\\n      // From the result, take just the data we are interested in\\n      format: {property: \\\"aggregations.table.buckets\\\"}\\n      // Convert key.stk1 -> stk1 for simpler access below\\n      transform: [\\n        {type: \\\"formula\\\", expr: \\\"datum.key.stk1\\\", as: \\\"stk1\\\"}\\n        {type: \\\"formula\\\", expr: \\\"datum.key.stk2\\\", as: \\\"stk2\\\"}\\n        {type: \\\"formula\\\", expr: \\\"datum.doc_count\\\", as: \\\"size\\\"}\\n      ]\\n    }\\n    {\\n      name: nodes\\n      source: rawData\\n      transform: [\\n        // when a country is selected, filter out unrelated data\\n        {\\n          type: filter\\n          expr: !groupSelector || groupSelector.stk1 == datum.stk1 || groupSelector.stk2 == datum.stk2\\n        }\\n        // Set new key for later lookups - identifies each node\\n        {type: \\\"formula\\\", expr: \\\"datum.stk1+datum.stk2\\\", as: \\\"key\\\"}\\n        // instead of each table row, create two new rows,\\n        // one for the source (stack=stk1) and one for destination node (stack=stk2).\\n        // The country code stored in stk1 and stk2 fields is placed into grpId field.\\n        {\\n          type: fold\\n          fields: [\\\"stk1\\\", \\\"stk2\\\"]\\n          as: [\\\"stack\\\", \\\"grpId\\\"]\\n        }\\n        // Create a sortkey, different for stk1 and stk2 stacks.\\n        // Space separator ensures proper sort order in some corner cases.\\n        {\\n          type: formula\\n          expr: datum.stack == 'stk1' ? datum.stk1+' '+datum.stk2 : datum.stk2+' '+datum.stk1\\n          as: sortField\\n        }\\n        // Calculate y0 and y1 positions for stacking nodes one on top of the other,\\n        // independently for each stack, and ensuring they are in the proper order,\\n        // alphabetical from the top (reversed on the y axis)\\n        {\\n          type: stack\\n          groupby: [\\\"stack\\\"]\\n          sort: {field: \\\"sortField\\\", order: \\\"descending\\\"}\\n          field: size\\n        }\\n        // calculate vertical center point for each node, used to draw edges\\n        {type: \\\"formula\\\", expr: \\\"(datum.y0+datum.y1)/2\\\", as: \\\"yc\\\"}\\n      ]\\n    }\\n    {\\n      name: groups\\n      source: nodes\\n      transform: [\\n        // combine all nodes into country groups, summing up the doc counts\\n        {\\n          type: aggregate\\n          groupby: [\\\"stack\\\", \\\"grpId\\\"]\\n          fields: [\\\"size\\\"]\\n          ops: [\\\"sum\\\"]\\n          as: [\\\"total\\\"]\\n        }\\n        // re-calculate the stacking y0,y1 values\\n        {\\n          type: stack\\n          groupby: [\\\"stack\\\"]\\n          sort: {field: \\\"grpId\\\", order: \\\"descending\\\"}\\n          field: total\\n        }\\n        // project y0 and y1 values to screen coordinates\\n        // doing it once here instead of doing it several times in marks\\n        {type: \\\"formula\\\", expr: \\\"scale('y', datum.y0)\\\", as: \\\"scaledY0\\\"}\\n        {type: \\\"formula\\\", expr: \\\"scale('y', datum.y1)\\\", as: \\\"scaledY1\\\"}\\n        // boolean flag if the label should be on the right of the stack\\n        {type: \\\"formula\\\", expr: \\\"datum.stack == 'stk1'\\\", as: \\\"rightLabel\\\"}\\n        // Calculate traffic percentage for this country using \\\"y\\\" scale\\n        // domain upper bound, which represents the total traffic\\n        {\\n          type: formula\\n          expr: datum.total/domain('y')[1]\\n          as: percentage\\n        }\\n      ]\\n    }\\n    {\\n      // This is a temp lookup table with all the 'stk2' stack nodes\\n      name: destinationNodes\\n      source: nodes\\n      transform: [\\n        {type: \\\"filter\\\", expr: \\\"datum.stack == 'stk2'\\\"}\\n      ]\\n    }\\n    {\\n      name: edges\\n      source: nodes\\n      transform: [\\n        // we only want nodes from the left stack\\n        {type: \\\"filter\\\", expr: \\\"datum.stack == 'stk1'\\\"}\\n        // find corresponding node from the right stack, keep it as \\\"target\\\"\\n        {\\n          type: lookup\\n          from: destinationNodes\\n          key: key\\n          fields: [\\\"key\\\"]\\n          as: [\\\"target\\\"]\\n        }\\n        // calculate SVG link path between stk1 and stk2 stacks for the node pair\\n        {\\n          type: linkpath\\n          orient: horizontal\\n          shape: diagonal\\n          sourceY: {expr: \\\"scale('y', datum.yc)\\\"}\\n          sourceX: {expr: \\\"scale('x', 'stk1') + bandwidth('x')\\\"}\\n          targetY: {expr: \\\"scale('y', datum.target.yc)\\\"}\\n          targetX: {expr: \\\"scale('x', 'stk2')\\\"}\\n        }\\n        // A little trick to calculate the thickness of the line.\\n        // The value needs to be the same as the hight of the node, but scaling\\n        // size to screen's height gives inversed value because screen's Y\\n        // coordinate goes from the top to the bottom, whereas the graph's Y=0\\n        // is at the bottom. So subtracting scaled doc count from screen height\\n        // (which is the \\\"lower\\\" bound of the \\\"y\\\" scale) gives us the right value\\n        {\\n          type: formula\\n          expr: range('y')[0]-scale('y', datum.size)\\n          as: strokeWidth\\n        }\\n        // Tooltip needs individual link's percentage of all traffic\\n        {\\n          type: formula\\n          expr: datum.size/domain('y')[1]\\n          as: percentage\\n        }\\n      ]\\n    }\\n  ]\\n  scales: [\\n    {\\n      // calculates horizontal stack positioning\\n      name: x\\n      type: band\\n      range: width\\n      domain: [\\\"stk1\\\", \\\"stk2\\\"]\\n      paddingOuter: 0.05\\n      paddingInner: 0.95\\n    }\\n    {\\n      // this scale goes up as high as the highest y1 value of all nodes\\n      name: y\\n      type: linear\\n      range: height\\n      domain: {data: \\\"nodes\\\", field: \\\"y1\\\"}\\n    }\\n    {\\n      // use rawData to ensure the colors stay the same when clicking.\\n      name: color\\n      type: ordinal\\n      range: category\\n      domain: {data: \\\"rawData\\\", fields: [\\\"stk1\\\", \\\"stk2\\\"]}\\n    }\\n    {\\n      // this scale is used to map internal ids (stk1, stk2) to stack names\\n      name: stackNames\\n      type: ordinal\\n      range: [\\\"Source\\\", \\\"Destination\\\"]\\n      domain: [\\\"stk1\\\", \\\"stk2\\\"]\\n    }\\n  ]\\n  axes: [\\n    {\\n      // x axis should use custom label formatting to print proper stack names\\n      orient: bottom\\n      scale: x\\n      encode: {\\n        labels: {\\n          update: {\\n            text: {scale: \\\"stackNames\\\", field: \\\"value\\\"}\\n          }\\n        }\\n      }\\n    }\\n    {orient: \\\"left\\\", scale: \\\"y\\\"}\\n  ]\\n  marks: [\\n    {\\n      // draw the connecting line between stacks\\n      type: path\\n      name: edgeMark\\n      from: {data: \\\"edges\\\"}\\n      // this prevents some autosizing issues with large strokeWidth for paths\\n      clip: true\\n      encode: {\\n        update: {\\n          // By default use color of the left node, except when showing traffic\\n          // from just one country, in which case use destination color.\\n          stroke: [\\n            {\\n              test: groupSelector && groupSelector.stack=='stk1'\\n              scale: color\\n              field: stk2\\n            }\\n            {scale: \\\"color\\\", field: \\\"stk1\\\"}\\n          ]\\n          strokeWidth: {field: \\\"strokeWidth\\\"}\\n          path: {field: \\\"path\\\"}\\n          // when showing all traffic, and hovering over a country,\\n          // highlight the traffic from that country.\\n          strokeOpacity: {\\n            signal: !groupSelector && (groupHover.stk1 == datum.stk1 || groupHover.stk2 == datum.stk2) ? 0.9 : 0.3\\n          }\\n          // Ensure that the hover-selected edges show on top\\n          zindex: {\\n            signal: !groupSelector && (groupHover.stk1 == datum.stk1 || groupHover.stk2 == datum.stk2) ? 1 : 0\\n          }\\n          // format tooltip string\\n          tooltip: {\\n            signal: datum.stk1 + ' → ' + datum.stk2 + '    ' + format(datum.size, ',.0f') + '   (' + format(datum.percentage, '.1%') + ')'\\n          }\\n        }\\n        // Simple mouseover highlighting of a single line\\n        hover: {\\n          strokeOpacity: {value: 1}\\n        }\\n      }\\n    }\\n    {\\n      // draw stack groups (countries)\\n      type: rect\\n      name: groupMark\\n      from: {data: \\\"groups\\\"}\\n      encode: {\\n        enter: {\\n          fill: {scale: \\\"color\\\", field: \\\"grpId\\\"}\\n          width: {scale: \\\"x\\\", band: 1}\\n        }\\n        update: {\\n          x: {scale: \\\"x\\\", field: \\\"stack\\\"}\\n          y: {field: \\\"scaledY0\\\"}\\n          y2: {field: \\\"scaledY1\\\"}\\n          fillOpacity: {value: 0.6}\\n          tooltip: {\\n            signal: datum.grpId + '   ' + format(datum.total, ',.0f') + '   (' + format(datum.percentage, '.1%') + ')'\\n          }\\n        }\\n        hover: {\\n          fillOpacity: {value: 1}\\n        }\\n      }\\n    }\\n    {\\n      // draw country code labels on the inner side of the stack\\n      type: text\\n      from: {data: \\\"groups\\\"}\\n      // don't process events for the labels - otherwise line mouseover is unclean\\n      interactive: false\\n      encode: {\\n        update: {\\n          // depending on which stack it is, position x with some padding\\n          x: {\\n            signal: scale('x', datum.stack) + (datum.rightLabel ? bandwidth('x') + 8 : -8)\\n          }\\n          // middle of the group\\n          yc: {signal: \\\"(datum.scaledY0 + datum.scaledY1)/2\\\"}\\n          align: {signal: \\\"datum.rightLabel ? 'left' : 'right'\\\"}\\n          baseline: {value: \\\"middle\\\"}\\n          fontWeight: {value: \\\"bold\\\"}\\n          // only show text label if the group's height is large enough\\n          text: {signal: \\\"abs(datum.scaledY0-datum.scaledY1) > 13 ? datum.grpId : ''\\\"}\\n        }\\n      }\\n    }\\n    {\\n      // Create a \\\"show all\\\" button. Shown only when a country is selected.\\n      type: group\\n      data: [\\n        // We need to make the button show only when groupSelector signal is true.\\n        // Each mark is drawn as many times as there are elements in the backing data.\\n        // Which means that if values list is empty, it will not be drawn.\\n        // Here I create a data source with one empty object, and filter that list\\n        // based on the signal value. This can only be done in a group.\\n        {\\n          name: dataForShowAll\\n          values: [{}]\\n          transform: [{type: \\\"filter\\\", expr: \\\"groupSelector\\\"}]\\n        }\\n      ]\\n      // Set button size and positioning\\n      encode: {\\n        enter: {\\n          xc: {signal: \\\"width/2\\\"}\\n          y: {value: 30}\\n          width: {value: 80}\\n          height: {value: 30}\\n        }\\n      }\\n      marks: [\\n        {\\n          // This group is shown as a button with rounded corners.\\n          type: group\\n          // mark name allows signal capturing\\n          name: groupReset\\n          // Only shows button if dataForShowAll has values.\\n          from: {data: \\\"dataForShowAll\\\"}\\n          encode: {\\n            enter: {\\n              cornerRadius: {value: 6}\\n              fill: {value: \\\"#f5f5f5\\\"}\\n              stroke: {value: \\\"#c1c1c1\\\"}\\n              strokeWidth: {value: 2}\\n              // use parent group's size\\n              height: {\\n                field: {group: \\\"height\\\"}\\n              }\\n              width: {\\n                field: {group: \\\"width\\\"}\\n              }\\n            }\\n            update: {\\n              // groups are transparent by default\\n              opacity: {value: 1}\\n            }\\n            hover: {\\n              opacity: {value: 0.7}\\n            }\\n          }\\n          marks: [\\n            {\\n              type: text\\n              // if true, it will prevent clicking on the button when over text.\\n              interactive: false\\n              encode: {\\n                enter: {\\n                  // center text in the paren group\\n                  xc: {\\n                    field: {group: \\\"width\\\"}\\n                    mult: 0.5\\n                  }\\n                  yc: {\\n                    field: {group: \\\"height\\\"}\\n                    mult: 0.5\\n                    offset: 2\\n                  }\\n                  align: {value: \\\"center\\\"}\\n                  baseline: {value: \\\"middle\\\"}\\n                  fontWeight: {value: \\\"bold\\\"}\\n                  text: {value: \\\"Show All\\\"}\\n                }\\n              }\\n            }\\n          ]\\n        }\\n      ]\\n    }\\n  ]\\n  signals: [\\n    {\\n      // used to highlight traffic to/from the same country\\n      name: groupHover\\n      value: {}\\n      on: [\\n        {\\n          events: @groupMark:mouseover\\n          update: \\\"{stk1:datum.stack=='stk1' && datum.grpId, stk2:datum.stack=='stk2' && datum.grpId}\\\"\\n        }\\n        {events: \\\"mouseout\\\", update: \\\"{}\\\"}\\n      ]\\n    }\\n    // used to filter only the data related to the selected country\\n    {\\n      name: groupSelector\\n      value: false\\n      on: [\\n        {\\n          // Clicking groupMark sets this signal to the filter values\\n          events: @groupMark:click!\\n          update: \\\"{stack:datum.stack, stk1:datum.stack=='stk1' && datum.grpId, stk2:datum.stack=='stk2' && datum.grpId}\\\"\\n        }\\n        {\\n          // Clicking \\\"show all\\\" button, or double-clicking anywhere resets it\\n          events: [\\n            {type: \\\"click\\\", markname: \\\"groupReset\\\"}\\n            {type: \\\"dblclick\\\"}\\n          ]\\n          update: \\\"false\\\"\\n        }\\n      ]\\n    }\\n  ]\\n}\"}}"},"coreMigrationVersion":"7.16.2","id":"4ec86110-3112-11ec-bd68-7dd8bf7e92b5","migrationVersion":{"visualization":"7.14.0"},"references":[],"type":"visualization","updated_at":"2021-10-19T19:25:24.263Z","version":"WzQxNjMsMl0="}
{"attributes":{"description":"","state":{"datasourceStates":{"indexpattern":{"layers":{"03f8c4fa-2923-4fd5-96f6-5d988c3bace2":{"columnOrder":["d5c28fa0-9b5b-49a9-abba-6c0129662183","f946b73a-fedc-480e-94a4-40f4fa4eab89","27d32157-7675-4c14-83f9-cf7586f4ce95"],"columns":{"27d32157-7675-4c14-83f9-cf7586f4ce95":{"customLabel":true,"dataType":"number","isBucketed":false,"label":" ","operationType":"unique_count","scale":"ratio","sourceField":"suricata.alert_signature.keyword"},"d5c28fa0-9b5b-49a9-abba-6c0129662183":{"customLabel":true,"dataType":"string","isBucketed":true,"label":" ","operationType":"terms","params":{"missingBucket":false,"orderBy":{"columnId":"27d32157-7675-4c14-83f9-cf7586f4ce95","type":"column"},"orderDirection":"desc","otherBucket":true,"size":15},"scale":"ordinal","sourceField":"suricata.alert_signature.keyword"},"f946b73a-fedc-480e-94a4-40f4fa4eab89":{"dataType":"date","isBucketed":true,"label":"@timestamp","operationType":"date_histogram","params":{"interval":"auto"},"scale":"interval","sourceField":"@timestamp"}},"incompleteColumns":{}}}}},"filters":[],"query":{"language":"kuery","query":""},"visualization":{"layers":[{"accessors":["27d32157-7675-4c14-83f9-cf7586f4ce95"],"layerId":"03f8c4fa-2923-4fd5-96f6-5d988c3bace2","layerType":"data","position":"top","seriesType":"bar_stacked","showGridlines":false,"splitAccessor":"d5c28fa0-9b5b-49a9-abba-6c0129662183","xAccessor":"f946b73a-fedc-480e-94a4-40f4fa4eab89","yConfig":[{"axisMode":"auto","forAccessor":"27d32157-7675-4c14-83f9-cf7586f4ce95"}]}],"legend":{"isVisible":true,"position":"right"},"preferredSeriesType":"bar_stacked","title":"Empty XY chart","valueLabels":"hide","yLeftExtent":{"mode":"full"},"yRightExtent":{"mode":"full"}}},"title":"OPNsense : Telegraf - Suricata metrics - Signature / Time","visualizationType":"lnsXY"},"coreMigrationVersion":"7.16.2","id":"f17ade60-310d-11ec-bd68-7dd8bf7e92b5","migrationVersion":{"lens":"7.16.0"},"references":[{"id":"4d596070-3051-11ec-bd68-7dd8bf7e92b5","name":"indexpattern-datasource-current-indexpattern","type":"index-pattern"},{"id":"4d596070-3051-11ec-bd68-7dd8bf7e92b5","name":"indexpattern-datasource-layer-03f8c4fa-2923-4fd5-96f6-5d988c3bace2","type":"index-pattern"}],"type":"lens","updated_at":"2021-10-19T18:54:09.740Z","version":"WzM5OTksMl0="}
{"attributes":{"description":"","state":{"datasourceStates":{"indexpattern":{"layers":{"214aedc3-76bd-4825-b037-15a4cba90d86":{"columnOrder":["0925e3dd-b84d-4a36-883f-2cdd0bfb0404","734d507a-eee2-4a0d-9d38-ceeb17621513"],"columns":{"0925e3dd-b84d-4a36-883f-2cdd0bfb0404":{"dataType":"string","isBucketed":true,"label":"Top values of tag.event_type.keyword","operationType":"terms","params":{"missingBucket":false,"orderBy":{"columnId":"734d507a-eee2-4a0d-9d38-ceeb17621513","type":"column"},"orderDirection":"desc","otherBucket":true,"size":5},"scale":"ordinal","sourceField":"tag.event_type.keyword"},"734d507a-eee2-4a0d-9d38-ceeb17621513":{"dataType":"number","isBucketed":false,"label":"Count of records","operationType":"count","scale":"ratio","sourceField":"Records"}},"incompleteColumns":{}}}}},"filters":[],"query":{"language":"kuery","query":""},"visualization":{"layers":[{"categoryDisplay":"hide","groups":["0925e3dd-b84d-4a36-883f-2cdd0bfb0404"],"layerId":"214aedc3-76bd-4825-b037-15a4cba90d86","layerType":"data","legendDisplay":"show","metric":"734d507a-eee2-4a0d-9d38-ceeb17621513","nestedLegend":false,"numberDisplay":"percent"}],"shape":"donut"}},"title":"OPNsense : Telegraf - Suricata metrics - Drop / Alert","visualizationType":"lnsPie"},"coreMigrationVersion":"7.16.2","id":"9fab0ae0-310f-11ec-bd68-7dd8bf7e92b5","migrationVersion":{"lens":"7.16.0"},"references":[{"id":"4d596070-3051-11ec-bd68-7dd8bf7e92b5","name":"indexpattern-datasource-current-indexpattern","type":"index-pattern"},{"id":"4d596070-3051-11ec-bd68-7dd8bf7e92b5","name":"indexpattern-datasource-layer-214aedc3-76bd-4825-b037-15a4cba90d86","type":"index-pattern"}],"type":"lens","updated_at":"2021-10-19T19:06:11.480Z","version":"WzQxMjksMl0="}
{"attributes":{"description":"","state":{"datasourceStates":{"indexpattern":{"layers":{"9324d054-d90a-4869-bb89-abb19c466ee4":{"columnOrder":["d2bed1f9-9411-4208-a32e-f5d19075231c","2b05c04e-8ffd-4e41-980d-97c583e0389e"],"columns":{"2b05c04e-8ffd-4e41-980d-97c583e0389e":{"dataType":"number","isBucketed":false,"label":"Count of records","operationType":"count","scale":"ratio","sourceField":"Records"},"d2bed1f9-9411-4208-a32e-f5d19075231c":{"dataType":"string","isBucketed":true,"label":"Top values of suricata.alert_metadata_signature_severity_0.keyword","operationType":"terms","params":{"missingBucket":false,"orderBy":{"columnId":"2b05c04e-8ffd-4e41-980d-97c583e0389e","type":"column"},"orderDirection":"desc","otherBucket":true,"size":5},"scale":"ordinal","sourceField":"suricata.alert_metadata_signature_severity_0.keyword"}},"incompleteColumns":{}}}}},"filters":[],"query":{"language":"kuery","query":""},"visualization":{"layers":[{"categoryDisplay":"hide","groups":["d2bed1f9-9411-4208-a32e-f5d19075231c"],"layerId":"9324d054-d90a-4869-bb89-abb19c466ee4","layerType":"data","legendDisplay":"show","metric":"2b05c04e-8ffd-4e41-980d-97c583e0389e","nestedLegend":false,"numberDisplay":"percent"}],"palette":{"name":"negative","type":"palette"},"shape":"donut"}},"title":"OPNsense : Telegraf - Suricata metrics - Severity","visualizationType":"lnsPie"},"coreMigrationVersion":"7.16.2","id":"8de733a0-3110-11ec-bd68-7dd8bf7e92b5","migrationVersion":{"lens":"7.16.0"},"references":[{"id":"4d596070-3051-11ec-bd68-7dd8bf7e92b5","name":"indexpattern-datasource-current-indexpattern","type":"index-pattern"},{"id":"4d596070-3051-11ec-bd68-7dd8bf7e92b5","name":"indexpattern-datasource-layer-9324d054-d90a-4869-bb89-abb19c466ee4","type":"index-pattern"}],"type":"lens","updated_at":"2021-10-19T19:14:45.943Z","version":"WzQxNDAsMl0="}
{"attributes":{"description":"","state":{"datasourceStates":{"indexpattern":{"layers":{"d4a7641e-42e0-4d73-adf5-2bfdd4d251eb":{"columnOrder":["7b049634-d6e0-46e5-82f1-3ae67002c3d8","f0213bb0-6065-4cbb-81e7-87d25afd5fb2"],"columns":{"7b049634-d6e0-46e5-82f1-3ae67002c3d8":{"dataType":"string","isBucketed":true,"label":"Top values of tag.dest_ip.keyword","operationType":"terms","params":{"missingBucket":false,"orderBy":{"columnId":"f0213bb0-6065-4cbb-81e7-87d25afd5fb2","type":"column"},"orderDirection":"desc","otherBucket":true,"size":20},"scale":"ordinal","sourceField":"tag.dest_ip.keyword"},"f0213bb0-6065-4cbb-81e7-87d25afd5fb2":{"dataType":"number","isBucketed":false,"label":"Count of records","operationType":"count","scale":"ratio","sourceField":"Records"}},"incompleteColumns":{}}}}},"filters":[],"query":{"language":"kuery","query":""},"visualization":{"layers":[{"categoryDisplay":"hide","groups":["7b049634-d6e0-46e5-82f1-3ae67002c3d8"],"layerId":"d4a7641e-42e0-4d73-adf5-2bfdd4d251eb","layerType":"data","legendDisplay":"show","metric":"f0213bb0-6065-4cbb-81e7-87d25afd5fb2","nestedLegend":false,"numberDisplay":"percent"}],"palette":{"name":"negative","type":"palette"},"shape":"donut"}},"title":"OPNsense : Telegraf - Suricata metrics - Alerts & Top Destinations","visualizationType":"lnsPie"},"coreMigrationVersion":"7.16.2","id":"5336f810-310d-11ec-bd68-7dd8bf7e92b5","migrationVersion":{"lens":"7.16.0"},"references":[{"id":"4d596070-3051-11ec-bd68-7dd8bf7e92b5","name":"indexpattern-datasource-current-indexpattern","type":"index-pattern"},{"id":"4d596070-3051-11ec-bd68-7dd8bf7e92b5","name":"indexpattern-datasource-layer-d4a7641e-42e0-4d73-adf5-2bfdd4d251eb","type":"index-pattern"}],"type":"lens","updated_at":"2021-10-19T19:15:47.871Z","version":"WzQxNDIsMl0="}
{"attributes":{"description":"","state":{"datasourceStates":{"indexpattern":{"layers":{"7780c5cd-e2f3-4166-9cec-7a277c2926a3":{"columnOrder":["2f6b6fe4-cbed-4567-a32f-465a97aa1cd7","19ca76fb-a322-443e-b928-9624e35ed628","c52c70ca-0659-4244-8c6b-740e4a8baad1"],"columns":{"19ca76fb-a322-443e-b928-9624e35ed628":{"dataType":"string","isBucketed":true,"label":"Top values of suricata.alert_signature.keyword","operationType":"terms","params":{"missingBucket":false,"orderBy":{"columnId":"c52c70ca-0659-4244-8c6b-740e4a8baad1","type":"column"},"orderDirection":"desc","otherBucket":true,"size":10},"scale":"ordinal","sourceField":"suricata.alert_signature.keyword"},"2f6b6fe4-cbed-4567-a32f-465a97aa1cd7":{"dataType":"string","isBucketed":true,"label":"Top values of suricata.alert_category.keyword","operationType":"terms","params":{"missingBucket":false,"orderBy":{"columnId":"c52c70ca-0659-4244-8c6b-740e4a8baad1","type":"column"},"orderDirection":"desc","otherBucket":true,"size":10},"scale":"ordinal","sourceField":"suricata.alert_category.keyword"},"c52c70ca-0659-4244-8c6b-740e4a8baad1":{"dataType":"number","isBucketed":false,"label":"Count of records","operationType":"count","scale":"ratio","sourceField":"Records"}},"incompleteColumns":{}}}}},"filters":[],"query":{"language":"kuery","query":""},"visualization":{"layers":[{"categoryDisplay":"default","groups":["2f6b6fe4-cbed-4567-a32f-465a97aa1cd7","19ca76fb-a322-443e-b928-9624e35ed628"],"layerId":"7780c5cd-e2f3-4166-9cec-7a277c2926a3","layerType":"data","legendDisplay":"show","legendMaxLines":2,"legendPosition":"right","metric":"c52c70ca-0659-4244-8c6b-740e4a8baad1","nestedLegend":true,"numberDisplay":"percent","truncateLegend":true}],"palette":{"name":"gray","type":"palette"},"shape":"donut"}},"title":"OPNsense : Telegraf - Suricata metrics - Category & Signature","visualizationType":"lnsPie"},"coreMigrationVersion":"7.16.2","id":"69170e50-310c-11ec-bd68-7dd8bf7e92b5","migrationVersion":{"lens":"7.16.0"},"references":[{"id":"4d596070-3051-11ec-bd68-7dd8bf7e92b5","name":"indexpattern-datasource-current-indexpattern","type":"index-pattern"},{"id":"4d596070-3051-11ec-bd68-7dd8bf7e92b5","name":"indexpattern-datasource-layer-7780c5cd-e2f3-4166-9cec-7a277c2926a3","type":"index-pattern"}],"type":"lens","updated_at":"2021-10-19T19:16:10.879Z","version":"WzQxNDUsMl0="}
{"attributes":{"columns":["suricata.in_iface","tag.src_ip","tag.src_port","suricata.alert_action","suricata.alert_category","suricata.alert_signature","tag.dest_ip","tag.dest_port","suricata.alert_metadata_signature_severity_0"],"description":"","hits":0,"kibanaSavedObjectMeta":{"searchSourceJSON":"{\"highlightAll\":true,\"version\":true,\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[{\"meta\":{\"alias\":null,\"negate\":false,\"disabled\":false,\"type\":\"exists\",\"key\":\"suricata.in_iface\",\"value\":\"exists\",\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.filter[0].meta.index\"},\"exists\":{\"field\":\"suricata.in_iface\"},\"$state\":{\"store\":\"appState\"}}],\"indexRefName\":\"kibanaSavedObjectMeta.searchSourceJSON.index\"}"},"sort":[["@timestamp","desc"]],"title":"OPNsense : Telegraf - Suricata metrics - Search","version":1},"coreMigrationVersion":"7.16.2","id":"94bb7da0-30d7-11ec-bd68-7dd8bf7e92b5","migrationVersion":{"search":"7.9.3"},"references":[{"id":"4d596070-3051-11ec-bd68-7dd8bf7e92b5","name":"kibanaSavedObjectMeta.searchSourceJSON.index","type":"index-pattern"},{"id":"4d596070-3051-11ec-bd68-7dd8bf7e92b5","name":"kibanaSavedObjectMeta.searchSourceJSON.filter[0].meta.index","type":"index-pattern"}],"type":"search","updated_at":"2021-10-19T12:48:28.315Z","version":"WzM5NTYsMl0="}
{"attributes":{"description":"","state":{"datasourceStates":{"indexpattern":{"layers":{"05943e8f-ab5c-4a28-98d8-53d657b572a4":{"columnOrder":["d1163211-1a79-408d-ae93-336dccd6b554","2c417801-a3b9-49f6-b3f9-428c6965dc23","b16699a3-ff9b-488b-b920-950d7f0aa33e","431b2418-ec6a-4d38-babf-f946cd8f0ff2","a00e4241-d33e-475b-accc-147419013cc4","c605d5e6-9c26-4c4d-a5ef-618776dc07b5","155d1af4-ddbd-417f-aad8-01a2564ff2ba","b0b543a4-7b80-4a66-b177-67c43265dda5","6123cef6-8b88-4a8f-afb4-81d012123336","4975a772-8979-4fb0-a1f1-46d17f375a47"],"columns":{"155d1af4-ddbd-417f-aad8-01a2564ff2ba":{"customLabel":true,"dataType":"string","isBucketed":true,"label":"Destination port","operationType":"terms","params":{"missingBucket":false,"orderBy":{"columnId":"4975a772-8979-4fb0-a1f1-46d17f375a47","type":"column"},"orderDirection":"desc","otherBucket":true,"size":10},"scale":"ordinal","sourceField":"tag.dest_port.keyword"},"2c417801-a3b9-49f6-b3f9-428c6965dc23":{"customLabel":true,"dataType":"string","isBucketed":true,"label":"Source","operationType":"terms","params":{"missingBucket":false,"orderBy":{"columnId":"4975a772-8979-4fb0-a1f1-46d17f375a47","type":"column"},"orderDirection":"desc","otherBucket":true,"size":10},"scale":"ordinal","sourceField":"tag.src_ip.keyword"},"431b2418-ec6a-4d38-babf-f946cd8f0ff2":{"customLabel":true,"dataType":"string","isBucketed":true,"label":"Category","operationType":"terms","params":{"missingBucket":false,"orderBy":{"columnId":"4975a772-8979-4fb0-a1f1-46d17f375a47","type":"column"},"orderDirection":"desc","otherBucket":true,"size":10},"scale":"ordinal","sourceField":"suricata.alert_category.keyword"},"4975a772-8979-4fb0-a1f1-46d17f375a47":{"dataType":"number","isBucketed":false,"label":"Count of records","operationType":"count","scale":"ratio","sourceField":"Records"},"6123cef6-8b88-4a8f-afb4-81d012123336":{"customLabel":true,"dataType":"string","isBucketed":true,"label":"Action","operationType":"terms","params":{"missingBucket":false,"orderBy":{"columnId":"4975a772-8979-4fb0-a1f1-46d17f375a47","type":"column"},"orderDirection":"desc","otherBucket":true,"size":10},"scale":"ordinal","sourceField":"suricata.alert_action.keyword"},"a00e4241-d33e-475b-accc-147419013cc4":{"customLabel":true,"dataType":"string","isBucketed":true,"label":"Signature","operationType":"terms","params":{"missingBucket":false,"orderBy":{"columnId":"4975a772-8979-4fb0-a1f1-46d17f375a47","type":"column"},"orderDirection":"desc","otherBucket":true,"size":10},"scale":"ordinal","sourceField":"suricata.alert_signature.keyword"},"b0b543a4-7b80-4a66-b177-67c43265dda5":{"customLabel":true,"dataType":"string","isBucketed":true,"label":"Severity","operationType":"terms","params":{"missingBucket":false,"orderBy":{"columnId":"4975a772-8979-4fb0-a1f1-46d17f375a47","type":"column"},"orderDirection":"desc","otherBucket":true,"size":10},"scale":"ordinal","sourceField":"suricata.alert_metadata_signature_severity_0.keyword"},"b16699a3-ff9b-488b-b920-950d7f0aa33e":{"customLabel":true,"dataType":"string","isBucketed":true,"label":"Source port","operationType":"terms","params":{"missingBucket":false,"orderBy":{"columnId":"4975a772-8979-4fb0-a1f1-46d17f375a47","type":"column"},"orderDirection":"desc","otherBucket":true,"size":10},"scale":"ordinal","sourceField":"tag.src_port.keyword"},"c605d5e6-9c26-4c4d-a5ef-618776dc07b5":{"customLabel":true,"dataType":"string","isBucketed":true,"label":"Destination","operationType":"terms","params":{"missingBucket":false,"orderBy":{"columnId":"4975a772-8979-4fb0-a1f1-46d17f375a47","type":"column"},"orderDirection":"desc","otherBucket":true,"size":10},"scale":"ordinal","sourceField":"tag.dest_ip.keyword"},"d1163211-1a79-408d-ae93-336dccd6b554":{"customLabel":true,"dataType":"date","isBucketed":true,"label":"Date","operationType":"date_histogram","params":{"interval":"auto"},"scale":"interval","sourceField":"@timestamp"}},"incompleteColumns":{}}}}},"filters":[],"query":{"language":"kuery","query":""},"visualization":{"columns":[{"columnId":"d1163211-1a79-408d-ae93-336dccd6b554","hidden":false,"isTransposed":false},{"columnId":"2c417801-a3b9-49f6-b3f9-428c6965dc23","isTransposed":false},{"columnId":"b16699a3-ff9b-488b-b920-950d7f0aa33e","isTransposed":false},{"columnId":"c605d5e6-9c26-4c4d-a5ef-618776dc07b5","isTransposed":false},{"columnId":"155d1af4-ddbd-417f-aad8-01a2564ff2ba","isTransposed":false},{"columnId":"b0b543a4-7b80-4a66-b177-67c43265dda5","isTransposed":false},{"columnId":"6123cef6-8b88-4a8f-afb4-81d012123336","isTransposed":false},{"columnId":"a00e4241-d33e-475b-accc-147419013cc4","isTransposed":false},{"columnId":"431b2418-ec6a-4d38-babf-f946cd8f0ff2","isTransposed":false},{"columnId":"4975a772-8979-4fb0-a1f1-46d17f375a47","hidden":true,"isTransposed":false}],"layerId":"05943e8f-ab5c-4a28-98d8-53d657b572a4","layerType":"data"}},"title":"OPNsense : Telegraf - Suricata metrics - Suricata log","visualizationType":"lnsDatatable"},"coreMigrationVersion":"7.16.2","id":"952c04a0-30d5-11ec-bd68-7dd8bf7e92b5","migrationVersion":{"lens":"7.16.0"},"references":[{"id":"4d596070-3051-11ec-bd68-7dd8bf7e92b5","name":"indexpattern-datasource-current-indexpattern","type":"index-pattern"},{"id":"4d596070-3051-11ec-bd68-7dd8bf7e92b5","name":"indexpattern-datasource-layer-05943e8f-ab5c-4a28-98d8-53d657b572a4","type":"index-pattern"}],"type":"lens","updated_at":"2021-10-19T19:19:22.391Z","version":"WzQxNDcsMl0="}
{"attributes":{"color":"#2c02f7","description":"","name":"OPNsense"},"coreMigrationVersion":"7.16.2","id":"2563a480-2873-11ec-b025-1b6683d87a9f","references":[],"type":"tag","updated_at":"2021-10-16T21:58:51.332Z","version":"WzMxNDcsMl0="}
{"attributes":{"color":"#4f4b8c","description":"","name":"telegraf"},"coreMigrationVersion":"7.16.2","id":"b809e1d0-6aab-11ec-ba8f-cfc262cb4e06","references":[],"type":"tag","updated_at":"2022-01-01T02:37:10.129Z","version":"WzU0NTksMl0="}
{"attributes":{"color":"#b116dd","description":"","name":"telegraf-suricata"},"coreMigrationVersion":"7.16.2","id":"fba2afb0-6ae9-11ec-ba8f-cfc262cb4e06","references":[],"type":"tag","updated_at":"2022-01-01T10:02:52.335Z","version":"WzU1MTMsMl0="}
{"attributes":{"description":"Dashboards for OPNsense utilizing metrics from the Telegraf plugin. Suricata related.","hits":0,"kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[]}"},"optionsJSON":"{\"useMargins\":true,\"syncColors\":false,\"hidePanelTitles\":false}","panelsJSON":"[{\"version\":\"7.16.2\",\"type\":\"lens\",\"gridData\":{\"x\":0,\"y\":0,\"w\":24,\"h\":8,\"i\":\"0d0120a0-bd9b-405e-95ba-9ed750ccf20a\"},\"panelIndex\":\"0d0120a0-bd9b-405e-95ba-9ed750ccf20a\",\"embeddableConfig\":{\"enhancements\":{}},\"panelRefName\":\"panel_0d0120a0-bd9b-405e-95ba-9ed750ccf20a\"},{\"version\":\"7.16.2\",\"type\":\"visualization\",\"gridData\":{\"x\":24,\"y\":0,\"w\":24,\"h\":15,\"i\":\"a9dd1d9d-984e-4215-961e-4d3f0f314559\"},\"panelIndex\":\"a9dd1d9d-984e-4215-961e-4d3f0f314559\",\"embeddableConfig\":{\"enhancements\":{}},\"panelRefName\":\"panel_a9dd1d9d-984e-4215-961e-4d3f0f314559\"},{\"version\":\"7.16.2\",\"type\":\"lens\",\"gridData\":{\"x\":0,\"y\":8,\"w\":24,\"h\":7,\"i\":\"099ed1b9-0066-4ea0-9f52-ca22a6840aae\"},\"panelIndex\":\"099ed1b9-0066-4ea0-9f52-ca22a6840aae\",\"embeddableConfig\":{\"enhancements\":{}},\"panelRefName\":\"panel_099ed1b9-0066-4ea0-9f52-ca22a6840aae\"},{\"version\":\"7.16.2\",\"type\":\"lens\",\"gridData\":{\"x\":0,\"y\":15,\"w\":12,\"h\":8,\"i\":\"85144508-5d1e-4fcd-b6d8-22ce1465a2ed\"},\"panelIndex\":\"85144508-5d1e-4fcd-b6d8-22ce1465a2ed\",\"embeddableConfig\":{\"enhancements\":{}},\"panelRefName\":\"panel_85144508-5d1e-4fcd-b6d8-22ce1465a2ed\"},{\"version\":\"7.16.2\",\"type\":\"lens\",\"gridData\":{\"x\":12,\"y\":15,\"w\":12,\"h\":8,\"i\":\"fccbebd0-7468-48eb-86cf-8f8407e7dce4\"},\"panelIndex\":\"fccbebd0-7468-48eb-86cf-8f8407e7dce4\",\"embeddableConfig\":{\"enhancements\":{}},\"panelRefName\":\"panel_fccbebd0-7468-48eb-86cf-8f8407e7dce4\"},{\"version\":\"7.16.2\",\"type\":\"lens\",\"gridData\":{\"x\":24,\"y\":15,\"w\":24,\"h\":8,\"i\":\"dfb95e08-0e7b-458e-8bcd-22786d162a8e\"},\"panelIndex\":\"dfb95e08-0e7b-458e-8bcd-22786d162a8e\",\"embeddableConfig\":{\"enhancements\":{}},\"panelRefName\":\"panel_dfb95e08-0e7b-458e-8bcd-22786d162a8e\"},{\"version\":\"7.16.2\",\"type\":\"lens\",\"gridData\":{\"x\":24,\"y\":23,\"w\":24,\"h\":15,\"i\":\"d7678fbe-3a0f-4209-8b3b-3e26cfaf8e40\"},\"panelIndex\":\"d7678fbe-3a0f-4209-8b3b-3e26cfaf8e40\",\"embeddableConfig\":{\"enhancements\":{}},\"panelRefName\":\"panel_d7678fbe-3a0f-4209-8b3b-3e26cfaf8e40\"},{\"version\":\"7.16.2\",\"type\":\"search\",\"gridData\":{\"x\":0,\"y\":38,\"w\":48,\"h\":17,\"i\":\"ccda3611-7a96-4e25-b7fb-067bc1f84195\"},\"panelIndex\":\"ccda3611-7a96-4e25-b7fb-067bc1f84195\",\"embeddableConfig\":{\"enhancements\":{}},\"panelRefName\":\"panel_ccda3611-7a96-4e25-b7fb-067bc1f84195\"},{\"version\":\"7.16.2\",\"type\":\"lens\",\"gridData\":{\"x\":0,\"y\":55,\"w\":48,\"h\":9,\"i\":\"b595ae23-50a0-4d2d-bc04-7dfc87fbd4da\"},\"panelIndex\":\"b595ae23-50a0-4d2d-bc04-7dfc87fbd4da\",\"embeddableConfig\":{\"enhancements\":{}},\"panelRefName\":\"panel_b595ae23-50a0-4d2d-bc04-7dfc87fbd4da\"}]","timeRestore":false,"title":"OPNsense dashboard : Telegraf - Suricata metrics","version":1},"coreMigrationVersion":"7.16.2","id":"043e8120-3107-11ec-bd68-7dd8bf7e92b5","migrationVersion":{"dashboard":"7.16.0"},"references":[{"id":"a114c980-310e-11ec-bd68-7dd8bf7e92b5","name":"0d0120a0-bd9b-405e-95ba-9ed750ccf20a:panel_0d0120a0-bd9b-405e-95ba-9ed750ccf20a","type":"lens"},{"id":"4ec86110-3112-11ec-bd68-7dd8bf7e92b5","name":"a9dd1d9d-984e-4215-961e-4d3f0f314559:panel_a9dd1d9d-984e-4215-961e-4d3f0f314559","type":"visualization"},{"id":"f17ade60-310d-11ec-bd68-7dd8bf7e92b5","name":"099ed1b9-0066-4ea0-9f52-ca22a6840aae:panel_099ed1b9-0066-4ea0-9f52-ca22a6840aae","type":"lens"},{"id":"9fab0ae0-310f-11ec-bd68-7dd8bf7e92b5","name":"85144508-5d1e-4fcd-b6d8-22ce1465a2ed:panel_85144508-5d1e-4fcd-b6d8-22ce1465a2ed","type":"lens"},{"id":"8de733a0-3110-11ec-bd68-7dd8bf7e92b5","name":"fccbebd0-7468-48eb-86cf-8f8407e7dce4:panel_fccbebd0-7468-48eb-86cf-8f8407e7dce4","type":"lens"},{"id":"5336f810-310d-11ec-bd68-7dd8bf7e92b5","name":"dfb95e08-0e7b-458e-8bcd-22786d162a8e:panel_dfb95e08-0e7b-458e-8bcd-22786d162a8e","type":"lens"},{"id":"69170e50-310c-11ec-bd68-7dd8bf7e92b5","name":"d7678fbe-3a0f-4209-8b3b-3e26cfaf8e40:panel_d7678fbe-3a0f-4209-8b3b-3e26cfaf8e40","type":"lens"},{"id":"94bb7da0-30d7-11ec-bd68-7dd8bf7e92b5","name":"ccda3611-7a96-4e25-b7fb-067bc1f84195:panel_ccda3611-7a96-4e25-b7fb-067bc1f84195","type":"search"},{"id":"952c04a0-30d5-11ec-bd68-7dd8bf7e92b5","name":"b595ae23-50a0-4d2d-bc04-7dfc87fbd4da:panel_b595ae23-50a0-4d2d-bc04-7dfc87fbd4da","type":"lens"},{"id":"2563a480-2873-11ec-b025-1b6683d87a9f","name":"tag-2563a480-2873-11ec-b025-1b6683d87a9f","type":"tag"},{"id":"b809e1d0-6aab-11ec-ba8f-cfc262cb4e06","name":"tag-b809e1d0-6aab-11ec-ba8f-cfc262cb4e06","type":"tag"},{"id":"fba2afb0-6ae9-11ec-ba8f-cfc262cb4e06","name":"tag-fba2afb0-6ae9-11ec-ba8f-cfc262cb4e06","type":"tag"}],"type":"dashboard","updated_at":"2022-01-01T10:02:59.111Z","version":"WzU1MTUsMl0="}
{"excludedObjects":[],"excludedObjectsCount":0,"exportedCount":14,"missingRefCount":0,"missingReferences":[]}